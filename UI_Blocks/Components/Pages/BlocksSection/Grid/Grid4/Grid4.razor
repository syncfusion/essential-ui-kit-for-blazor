@page "/blocks/grid-4"

@inherits UI_Blocks.Components.Pages.MainSection.Demo

@ThemeLinks

@if (CurrentTheme.Contains("tailwind"))
{
    <section class="bg-gray-50 dark:bg-gray-950">
        <div class="mx-auto w-full py-12 sm:px-6 px-4">
            <div class="flex justify-end items-center pb-4">
                <div class="w-full sm:w-72">
                    <div class="e-input-group w-full">
                        <span class="e-input-group-icon e-icons e-search"></span>
                        <input class="e-input !pl-0" type="text" placeholder="Search" aria-label="enter contact details" role="textbox" />
                    </div>
                </div>
            </div>
            <SfGrid DataSource="GridData" Width="100%" Height="668" role="grid">
                <GridColumns>
                    <GridColumn Field=@nameof(Contact.ContactId) HeaderText="Contact ID" Width="90">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <a class="text-primary-700 font-medium dark:text-primary-500" href="javascript:void(0);" aria-label="contact ID" role="link">@contact.ContactId</a>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.Profile) HeaderText="Profile" TextAlign="TextAlign.Left" Width="264">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <div class="flex gap-3 items-center py-1">
                                <div class="w-8 h-8">
                                    @if (!string.IsNullOrEmpty(contact.Profile.Avatar))
                                    {
                                        <span class="e-avatar e-avatar-circle e-avatar-small" 
                                            style="background-image: url('assets/images/common/avatar/@contact.Profile.Avatar')">
                                        </span>
                                    }
                                    else if (!string.IsNullOrEmpty(contact.Profile.Initial))
                                    {
                                        <span class="e-avatar e-avatar-circle e-avatar-small 
                                        @(contact.Profile.ColorTheme == "Red" ? "!bg-red-100 !text-red-700" :
                                                contact.Profile.ColorTheme == "Green" ? "!bg-green-100 !text-green-700" :
                                                contact.Profile.ColorTheme == "Blue" ? "!bg-cyan-100 !text-cyan-700" :
                                                contact.Profile.ColorTheme == "Orange" ? "!bg-orange-100 !text-orange-700" : "")
                                            ">
                                            @contact.Profile.Initial
                                        </span>
                                    }
                                </div>
                                <div class="flex flex-col text-sm">
                                    <p class="text-gray-900 dark:text-gray-50">@contact.Profile.Name</p>
                                    <p class="text-gray-500 dark:text-gray-400 truncate w-52">@contact.Profile.Email</p>
                                </div>
                            </div>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.JobTitle) HeaderText="Job Profile/Company Name" TextAlign="TextAlign.Left" Width="198">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <div class="flex gap-3 items-center py-1">
                                <div class="flex flex-col text-sm">
                                    <p class="text-gray-900 dark:text-gray-50">@contact.JobTitle</p>
                                    <p class="text-gray-500 dark:text-gray-400">@contact.Company</p>
                                </div>
                            </div>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.CommunicationPreferences) HeaderText="Communication Preferences" Width="190">
                        <Template>
                            @{
                                var contact = (context as Contact)!;                            
                                <SfChip>
                                    <ChipItems>
                                        @foreach (string elem in contact.CommunicationPreferences)
                                        {
                                            <ChipItem Text="@elem" CssClass="!bg-transparent !border !rounded"></ChipItem>
                                        }
                                    </ChipItems>
                                </SfChip>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.Location) HeaderText="Location" Width="130"></GridColumn>
                    <GridColumn Field=@nameof(Contact.LeadSource) HeaderText="Lead Source" Width="102"></GridColumn>
                    <GridColumn Field=@nameof(Contact.AssignedTo) HeaderText="Assigned To" TextAlign="TextAlign.Left" Width="164">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <div class="flex gap-3 items-center py-1.5">
                                <div class="w-8 h-8">
                                    <span class="e-avatar e-avatar-circle e-avatar-small" 
                                        style="background-image: url('assets/images/common/avatar/@contact.Avatar')">
                                    </span>
                                </div>
                                <div class="flex flex-col text-sm">
                                    <p class="text-gray-900 dark:text-gray-50">@contact.AssignedTo.Name</p>
                                    <p class="text-gray-500 dark:text-gray-400">@contact.AssignedTo.Department</p>
                                </div>
                            </div>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.Status) HeaderText="Status" Width="85">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <div class="e-bigger">
                                @switch(contact.Status)
                                {
                                    case "Inactive":
                                        <span class="e-badge flex gap-1 items-center w-max bg-transparent">
                                            <div class="w-2 h-2 rounded-full bg-red-700"></div>
                                            Inactive
                                        </span>
                                        break;
                                    case "Active":
                                        <span class="e-badge flex gap-1 items-center w-max bg-transparent">
                                            <div class="w-2 h-2 rounded-full bg-green-700 dark:bg-green-700"></div>
                                            Active
                                        </span>
                                        break;
                                    default:
                                        <span>The status is unknown.</span>
                                        break;
                                }
                            </div>
                        </Template>
                    </GridColumn>                    
                </GridColumns>
            </SfGrid>
        </div>
    </section>
}
else if (CurrentTheme.Contains("bootstrap5.3"))
{
    <section class="bg-body">
        <div class="w-100 py-5 px-3 px-sm-4 mx-auto">
            <div class="row justify-content-end pb-4">
                <div class="col-12 col-sm-6 col-lg-4">
                    <div class="e-input-group w-100">
                        <span class="e-input-group-icon e-icons e-search border-end-0"></span>
                        <input class="e-input form-control" type="text" placeholder="Search" aria-label="enter contact details" role="textbox" />
                    </div>
                </div>
            </div>
            <SfGrid DataSource="GridData" Width="100%" Height="668" role="grid">
                <GridColumns>
                    <GridColumn Field=@nameof(Contact.ContactId) HeaderText="Contact ID" Width="86">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <a class="text-primary fw-medium text-decoration-none" href="javascript:void(0);" aria-label="contact ID" role="link">@contact.ContactId</a>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.Profile) HeaderText="Profile" TextAlign="TextAlign.Left" Width="268">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <div class="d-flex gap-3 align-items-center">
                                <div class="rounded-circle overflow-hidden" style="width: 32px; height: 32px;">
                                    @if (!string.IsNullOrEmpty(contact.Profile.Avatar))
                                    {
                                        <span class="e-avatar e-avatar-circle e-avatar-small"
                                            style="background-image: url('assets/images/common/avatar/@contact.Profile.Avatar')">
                                        </span>
                                    }
                                    else if (!string.IsNullOrEmpty(contact.Profile.Initial))
                                    {
                                        <span class="e-avatar e-avatar-circle e-avatar-small
                                                @(contact.Profile.ColorTheme switch
                                                {
                                                    "Red" => "bg-danger-subtle text-danger-emphasis",
                                                    "Green" => "bg-success-subtle text-success-emphasis",
                                                    "Blue" => "bg-info-subtle text-info-emphasis",
                                                    "Orange" => "bg-warning-subtle text-warning-emphasis",
                                                    _ => ""
                                                })">
                                            @contact.Profile.Initial
                                        </span>
                                    }
                                </div>
                                <div class="d-flex flex-column text-body">
                                    <p class="text-body mb-0">@contact.Profile.Name</p>
                                    <p class="text-body-secondary mb-0">@contact.Profile.Email</p>
                                </div>
                            </div>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.JobTitle) HeaderText="Job Profile/Company Name" TextAlign="TextAlign.Left" Width="230">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <div class="d-flex gap-3 align-items-center">
                                <div class="d-flex flex-column text-body">
                                    <p class="text-body mb-0">@contact.JobTitle</p>
                                    <p class="text-body-secondary mb-0">@contact.Company</p>
                                </div>
                            </div>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.CommunicationPreferences) HeaderText="Communication Preferences" Width="198">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <SfChip>
                                <ChipItems>
                                    @foreach (string elem in contact.CommunicationPreferences)
                                    {
                                        <ChipItem Text="@elem" CssClass="bg-body text-body border rounded"></ChipItem>
                                    }
                                </ChipItems>
                            </SfChip>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.Location) HeaderText="Location" Width="106"></GridColumn>
                    <GridColumn Field=@nameof(Contact.LeadSource) HeaderText="Lead Source" Width="96"></GridColumn>
                    <GridColumn Field=@nameof(Contact.AssignedTo) HeaderText="Assigned To" TextAlign="TextAlign.Left" Width="150">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <div class="d-flex gap-3 align-items-center py-1">
                                <div class="rounded-circle overflow-hidden" style="width: 32px; height: 32px;">
                                    <span class="e-avatar e-avatar-circle e-avatar-small"
                                        style="background-image: url('assets/images/common/avatar/@contact.Avatar')">
                                    </span>
                                </div>
                                <div class="d-flex flex-column text-body">
                                    <p class="mb-0">@contact.AssignedTo.Name</p>
                                    <p class="text-secondary mb-0">@contact.AssignedTo.Department</p>
                                </div>
                            </div>
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Contact.Status) HeaderText="Status" Width="80">
                        <Template>
                            @{
                                var contact = (context as Contact)!;
                            }
                            <div class="fs-6">
                                @switch (contact.Status)
                                {
                                    case "Inactive":
                                        <span class="e-badge d-flex gap-1 align-items-center bg-transparent" style="width: fit-content;">
                                            <div class="rounded-circle bg-danger" style="width: 8px; height: 8px;"></div>
                                            Inactive
                                        </span>
                                        break;
                                    case "Active":
                                        <span class="e-badge d-flex gap-1 align-items-center bg-transparent" style="width: fit-content;">
                                            <div class="rounded-circle bg-success" style="width: 8px; height: 8px;"></div>
                                            Active
                                        </span>
                                        break;
                                    default:
                                        <span>The status is unknown.</span>
                                        break;
                                }
                            </div>
                        </Template>
                    </GridColumn>                    
                </GridColumns>
            </SfGrid>   
        </div>
    </section>
}